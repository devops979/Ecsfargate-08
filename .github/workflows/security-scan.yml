name: Scan and Validate the Infrastructure

on: 
  pull_request:
    branches:
      - main

permissions:
  contents: write
  id-token: write

defaults:
  run:
    working-directory: ./

jobs:
  scan:
    runs-on: self-hosted
    permissions:
      contents: write
      security-events: write
      actions: read
      id-token: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: "latest"
          github_token: ${{ secrets.GITHUBTOKEN }}

      - name: Init TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint

      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@master
        continue-on-error: true
        with:
          output_format: cli,sarif
          output_file_path: console,results.sarif
          soft_fail: true

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Upload SARIF file via GitHub API
        if: success() || failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          if [ -f "results.sarif" ]; then
            echo "Uploading SARIF file using GitHub REST API..."
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              --data @- \
              "https://api.github.com/repos/${GITHUB_REPOSITORY}/code-scanning/sarifs" <<EOF
          {
            "commit_sha": "${GITHUB_SHA}",
            "ref": "refs/pull/${{ github.event.pull_request.number }}/merge",
            "sarif": "$(base64 -w 0 results.sarif)",
            "tool_name": "Checkov"
          }
          EOF
          else
            echo "No SARIF file found. Skipping upload."
          fi

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: us-east-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.12.0"

      - name: Check Terraform Formatting
        run: terraform fmt -recursive

      - name: Clean Terraform Cache
        run: |
          rm -rf .terraform
          rm -f .terraform.lock.hcl

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Test
        run: terraform test || true

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Setup Node.js
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/setup-node@v3
        with:
          node-version: '18'


      - name: Install terraform-docs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/v0.16.0/terraform-docs-v0.16.0-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          chmod +x terraform-docs
          sudo mv terraform-docs /usr/local/bin/

      - name: Generate Terraform Docs and Commit
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "devops979@gmail.com"
          git config --local user.name "devops979"

          terraform-docs markdown . > README.md.new
          mv README.md.new README.md

          if [ -f README.md ]; then
            git add README.md
            if git commit -m "docs: Update README.md"; then
              git push
              echo "Successfully committed and pushed README.md changes."
            else
              echo "No README.md changes to commit."
            fi
          else
            echo "README.md was not generated."
          fi
      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outcome }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
