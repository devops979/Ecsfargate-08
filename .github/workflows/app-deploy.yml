name: ECR Repository Management

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
  push:
    branches: [main]

env:
  AWS_REGION: ap-south-1

permissions:
  id-token: write
  contents: read

jobs:
  create-ecr-repository:
    name: Create ECR Repository
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment || 'dev' }}
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/main'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ">= 1.12.0"  # or latest stable

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # or any version you need


      - name: Terraform Init - Infra
        working-directory: ./
        run: terraform init

      - name: Terraform Format - Infra
        working-directory: ./
        run: terraform fmt -recursive

      - name: Terraform Validate
        working-directory: ./
        run: terraform validate

      - name: Select or Create Terraform Workspace
        working-directory: ./
        run: |
          env="${{ github.event.inputs.environment || 'dev' }}"
          if ! terraform workspace list | grep -w "$env"; then
            terraform workspace new "$env"
          fi
          terraform workspace select "$env"

      - name: Terraform Plan
        working-directory: ./
        run: |
          env="${{ github.event.inputs.environment || 'dev' }}"
          terraform plan \
            -var="environment=$env" \
            -var-file="./environments/$env/$env.tfvars" \
            -target=module.patitent -target=module.appointment \
            -out=tfplan

      - name: Terraform Apply (ECR only)
        working-directory: ./
        run: terraform apply tfplan

      - name: Get ECR Repository URI
        id: ecr-uri
        run: |
          ECR_URL=$(terraform output -raw appointment_repository_url | head -n 1)
          echo "ecr_url=$ECR_URL" >> "$GITHUB_OUTPUT"
          echo "ECR Repository URI: $ECR_URL"
      
          ECR_URL_patitent=$(terraform output -raw patitent_repository_url | head -n 1)
          echo "ecr_url_new=$ECR_URL_patitent" >> "$GITHUB_OUTPUT"
          echo "ECR Repository URI: $ECR_URL_patitent"


    outputs:
      ecr_url: ${{ steps.ecr-uri.outputs.ecr_url }}
      ecr_url_new: ${{ steps.ecr-uri.outputs.ecr_url_new }}
